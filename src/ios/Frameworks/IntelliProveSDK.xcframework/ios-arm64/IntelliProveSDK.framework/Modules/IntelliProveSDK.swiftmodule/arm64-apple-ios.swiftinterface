// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target arm64-apple-ios15.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name IntelliProveSDK
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import AVKit
import Foundation
@_exported import IntelliProveSDK
import Swift
import SwiftUI
import WebKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_Concurrency.MainActor @preconcurrency public struct IntelliWebViewLink<Label> : SwiftUICore.View where Label : SwiftUICore.View {
  @_Concurrency.MainActor @preconcurrency public init(urlString: Swift.String, delegate: (any IntelliProveSDK.IntelliWebViewDelegate)? = nil, @SwiftUICore.ViewBuilder label: @escaping () -> Label)
  @_Concurrency.MainActor @preconcurrency public var body: some SwiftUICore.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s15IntelliProveSDK0A11WebViewLinkV4bodyQrvp", 0) __<Label>
}

@_inheritsConvenienceInitializers @objc public class IntelliWebViewFactory : ObjectiveC.NSObject {
  @objc public static func newWebView(urlString: Swift.String, delegate: any IntelliProveSDK.IntelliWebViewDelegate) -> UIKit.UIViewController
  @objc override dynamic public init()
  @objc deinit
}
@objc public protocol IntelliWebViewDelegate {
  @objc func didReceive(postMessage: Swift.String)
}
extension IntelliProveSDK.IntelliWebViewLink : Swift.Sendable {}
